Grammar

    0 $accept: programme $end

    1 programme: liste_declarations liste_fonctions

    2 liste_declarations: liste_declarations declaration
    3                   | %empty

    4 liste_fonctions: fonction liste_fonctions
    5                | fonction

    6 declaration: type liste_declarateurs ';'

    7 liste_declarateurs: liste_declarateurs ',' declarateur
    8                   | declarateur

    9 declarateur: identificateur
   10            | identificateur dec_tab

   11 dec_tab: '[' constante ']' dec_tab
   12        | '[' constante ']'

   13 $@1: %empty

   14 fonction: type identificateur '(' liste_parms ')' $@1 bloc
   15         | C_EXTERN type identificateur '(' liste_parms ')' ';'

   16 type: C_VOID
   17     | C_INT

   18 liste_parms: l_parms
   19            | %empty

   20 l_parms: parm
   21        | parm ',' l_parms

   22 parm: C_INT identificateur

   23 liste_instructions: instruction liste_instructions
   24                   | %empty

   25 instruction: iteration
   26            | selection
   27            | saut
   28            | affectation ';'
   29            | bloc
   30            | appel

   31 iteration: C_FOR '(' affectation ';' condition ';' affectation ')' instruction
   32          | C_WHILE '(' condition ')' instruction

   33 selection: C_IF '(' condition ')' instruction
   34          | C_IF '(' condition ')' instruction C_ELSE instruction
   35          | C_SWITCH '(' expression ')' '{' switch_body '}'

   36 switch_body: C_CASE constante ':' liste_instructions switch_body
   37            | C_DEFAULT ':' liste_instructions

   38 saut: C_BREAK ';'
   39     | C_RETURN ';'
   40     | C_RETURN expression ';'

   41 affectation: variable '=' expression

   42 $@2: %empty

   43 bloc: '{' $@2 liste_declarations liste_instructions '}'

   44 appel: identificateur '(' liste_expressions ')' ';'

   45 variable: identificateur
   46         | identificateur var_tab

   47 var_tab: '[' expression ']' var_tab
   48        | '[' expression ']'

   49 expression: '(' expression ')'
   50           | expression C_PLUS expression
   51           | expression C_MINUS expression
   52           | expression C_MULT expression
   53           | expression C_DIV expression
   54           | expression LEFT_SHIFT expression
   55           | expression RIGHT_SHIFT expression
   56           | expression C_BIN_AND expression
   57           | expression C_BIN_OR expression
   58           | C_MINUS expression
   59           | constante
   60           | variable
   61           | identificateur '(' liste_expressions ')'

   62 liste_expressions: l_expressions
   63                  | %empty

   64 l_expressions: expression
   65              | expression ',' l_expressions

   66 condition: C_NOT '(' condition ')'
   67          | '(' condition ')'
   68          | condition LOGICAL_AND condition
   69          | condition LOGICAL_OR condition
   70          | expression C_LT expression
   71          | expression C_GT expression
   72          | expression GTE expression
   73          | expression LTE expression
   74          | expression EQUALS expression
   75          | expression NOT_EQUALS expression


Terminals, with rules where they appear

$end (0) 0
'(' (40) 14 15 31 32 33 34 35 44 49 61 66 67
')' (41) 14 15 31 32 33 34 35 44 49 61 66 67
',' (44) 7 21 65
':' (58) 36 37
';' (59) 6 15 28 31 38 39 40 44
'=' (61) 41
'[' (91) 11 12 47 48
']' (93) 11 12 47 48
'{' (123) 35 43
'}' (125) 35 43
error (256)
C_INT (258) 17 22
C_VOID (259) 16
C_IF (260) 33 34
C_ELSE (261) 34
C_SWITCH (262) 35
C_CASE (263) 36
C_BREAK (264) 38
C_EXTERN (265) 15
C_DEFAULT (266) 37
C_FOR (267) 31
C_WHILE (268) 32
C_RETURN (269) 39 40
EQUALS (270) 74
GTE (271) 72
LTE (272) 73
NOT_EQUALS (273) 75
LEFT_SHIFT (274) 54
RIGHT_SHIFT (275) 55
LOGICAL_AND (276) 68
LOGICAL_OR (277) 69
C_PLUS (278) 50
C_MINUS (279) 51 58
C_MULT (280) 52
C_DIV (281) 53
C_BIN_AND (282) 56
C_BIN_OR (283) 57
C_NOT (284) 66
C_LT (285) 70
C_GT (286) 71
identificateur (287) 9 10 14 15 22 44 45 46 61
constante (288) 11 12 36 59
UNARY_MINUS (289)
THEN (290)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
programme (47)
    on left: 1, on right: 0
liste_declarations (48)
    on left: 2 3, on right: 1 2 43
liste_fonctions (49)
    on left: 4 5, on right: 1 4
declaration (50)
    on left: 6, on right: 2
liste_declarateurs (51)
    on left: 7 8, on right: 6 7
declarateur (52)
    on left: 9 10, on right: 7 8
dec_tab (53)
    on left: 11 12, on right: 10 11
fonction (54)
    on left: 14 15, on right: 4 5
$@1 (55)
    on left: 13, on right: 14
type (56)
    on left: 16 17, on right: 6 14 15
liste_parms (57)
    on left: 18 19, on right: 14 15
l_parms (58)
    on left: 20 21, on right: 18 21
parm (59)
    on left: 22, on right: 20 21
liste_instructions (60)
    on left: 23 24, on right: 23 36 37 43
instruction (61)
    on left: 25 26 27 28 29 30, on right: 23 31 32 33 34
iteration (62)
    on left: 31 32, on right: 25
selection (63)
    on left: 33 34 35, on right: 26
switch_body (64)
    on left: 36 37, on right: 35 36
saut (65)
    on left: 38 39 40, on right: 27
affectation (66)
    on left: 41, on right: 28 31
bloc (67)
    on left: 43, on right: 14 29
$@2 (68)
    on left: 42, on right: 43
appel (69)
    on left: 44, on right: 30
variable (70)
    on left: 45 46, on right: 41 60
var_tab (71)
    on left: 47 48, on right: 46 47
expression (72)
    on left: 49 50 51 52 53 54 55 56 57 58 59 60 61, on right: 35 40
    41 47 48 49 50 51 52 53 54 55 56 57 58 64 65 70 71 72 73 74 75
liste_expressions (73)
    on left: 62 63, on right: 44 61
l_expressions (74)
    on left: 64 65, on right: 62 65
condition (75)
    on left: 66 67 68 69 70 71 72 73 74 75, on right: 31 32 33 34 66
    67 68 69


State 0

    0 $accept: . programme $end

    $default  reduce using rule 3 (liste_declarations)

    programme           go to state 1
    liste_declarations  go to state 2


State 1

    0 $accept: programme . $end

    $end  shift, and go to state 3


State 2

    1 programme: liste_declarations . liste_fonctions
    2 liste_declarations: liste_declarations . declaration

    C_INT     shift, and go to state 4
    C_VOID    shift, and go to state 5
    C_EXTERN  shift, and go to state 6

    liste_fonctions  go to state 7
    declaration      go to state 8
    fonction         go to state 9
    type             go to state 10


State 3

    0 $accept: programme $end .

    $default  accept


State 4

   17 type: C_INT .

    $default  reduce using rule 17 (type)


State 5

   16 type: C_VOID .

    $default  reduce using rule 16 (type)


State 6

   15 fonction: C_EXTERN . type identificateur '(' liste_parms ')' ';'

    C_INT   shift, and go to state 4
    C_VOID  shift, and go to state 5

    type  go to state 11


State 7

    1 programme: liste_declarations liste_fonctions .

    $default  reduce using rule 1 (programme)


State 8

    2 liste_declarations: liste_declarations declaration .

    $default  reduce using rule 2 (liste_declarations)


State 9

    4 liste_fonctions: fonction . liste_fonctions
    5                | fonction .

    C_INT     shift, and go to state 4
    C_VOID    shift, and go to state 5
    C_EXTERN  shift, and go to state 6

    $default  reduce using rule 5 (liste_fonctions)

    liste_fonctions  go to state 12
    fonction         go to state 9
    type             go to state 13


State 10

    6 declaration: type . liste_declarateurs ';'
   14 fonction: type . identificateur '(' liste_parms ')' $@1 bloc

    identificateur  shift, and go to state 14

    liste_declarateurs  go to state 15
    declarateur         go to state 16


State 11

   15 fonction: C_EXTERN type . identificateur '(' liste_parms ')' ';'

    identificateur  shift, and go to state 17


State 12

    4 liste_fonctions: fonction liste_fonctions .

    $default  reduce using rule 4 (liste_fonctions)


State 13

   14 fonction: type . identificateur '(' liste_parms ')' $@1 bloc

    identificateur  shift, and go to state 18


State 14

    9 declarateur: identificateur .
   10            | identificateur . dec_tab
   14 fonction: type identificateur . '(' liste_parms ')' $@1 bloc

    '['  shift, and go to state 19
    '('  shift, and go to state 20

    $default  reduce using rule 9 (declarateur)

    dec_tab  go to state 21


State 15

    6 declaration: type liste_declarateurs . ';'
    7 liste_declarateurs: liste_declarateurs . ',' declarateur

    ';'  shift, and go to state 22
    ','  shift, and go to state 23


State 16

    8 liste_declarateurs: declarateur .

    $default  reduce using rule 8 (liste_declarateurs)


State 17

   15 fonction: C_EXTERN type identificateur . '(' liste_parms ')' ';'

    '('  shift, and go to state 24


State 18

   14 fonction: type identificateur . '(' liste_parms ')' $@1 bloc

    '('  shift, and go to state 20


State 19

   11 dec_tab: '[' . constante ']' dec_tab
   12        | '[' . constante ']'

    constante  shift, and go to state 25


State 20

   14 fonction: type identificateur '(' . liste_parms ')' $@1 bloc

    C_INT  shift, and go to state 26

    $default  reduce using rule 19 (liste_parms)

    liste_parms  go to state 27
    l_parms      go to state 28
    parm         go to state 29


State 21

   10 declarateur: identificateur dec_tab .

    $default  reduce using rule 10 (declarateur)


State 22

    6 declaration: type liste_declarateurs ';' .

    $default  reduce using rule 6 (declaration)


State 23

    7 liste_declarateurs: liste_declarateurs ',' . declarateur

    identificateur  shift, and go to state 30

    declarateur  go to state 31


State 24

   15 fonction: C_EXTERN type identificateur '(' . liste_parms ')' ';'

    C_INT  shift, and go to state 26

    $default  reduce using rule 19 (liste_parms)

    liste_parms  go to state 32
    l_parms      go to state 28
    parm         go to state 29


State 25

   11 dec_tab: '[' constante . ']' dec_tab
   12        | '[' constante . ']'

    ']'  shift, and go to state 33


State 26

   22 parm: C_INT . identificateur

    identificateur  shift, and go to state 34


State 27

   14 fonction: type identificateur '(' liste_parms . ')' $@1 bloc

    ')'  shift, and go to state 35


State 28

   18 liste_parms: l_parms .

    $default  reduce using rule 18 (liste_parms)


State 29

   20 l_parms: parm .
   21        | parm . ',' l_parms

    ','  shift, and go to state 36

    $default  reduce using rule 20 (l_parms)


State 30

    9 declarateur: identificateur .
   10            | identificateur . dec_tab

    '['  shift, and go to state 19

    $default  reduce using rule 9 (declarateur)

    dec_tab  go to state 21


State 31

    7 liste_declarateurs: liste_declarateurs ',' declarateur .

    $default  reduce using rule 7 (liste_declarateurs)


State 32

   15 fonction: C_EXTERN type identificateur '(' liste_parms . ')' ';'

    ')'  shift, and go to state 37


State 33

   11 dec_tab: '[' constante ']' . dec_tab
   12        | '[' constante ']' .

    '['  shift, and go to state 19

    $default  reduce using rule 12 (dec_tab)

    dec_tab  go to state 38


State 34

   22 parm: C_INT identificateur .

    $default  reduce using rule 22 (parm)


State 35

   14 fonction: type identificateur '(' liste_parms ')' . $@1 bloc

    $default  reduce using rule 13 ($@1)

    $@1  go to state 39


State 36

   21 l_parms: parm ',' . l_parms

    C_INT  shift, and go to state 26

    l_parms  go to state 40
    parm     go to state 29


State 37

   15 fonction: C_EXTERN type identificateur '(' liste_parms ')' . ';'

    ';'  shift, and go to state 41


State 38

   11 dec_tab: '[' constante ']' dec_tab .

    $default  reduce using rule 11 (dec_tab)


State 39

   14 fonction: type identificateur '(' liste_parms ')' $@1 . bloc

    '{'  shift, and go to state 42

    bloc  go to state 43


State 40

   21 l_parms: parm ',' l_parms .

    $default  reduce using rule 21 (l_parms)


State 41

   15 fonction: C_EXTERN type identificateur '(' liste_parms ')' ';' .

    $default  reduce using rule 15 (fonction)


State 42

   43 bloc: '{' . $@2 liste_declarations liste_instructions '}'

    $default  reduce using rule 42 ($@2)

    $@2  go to state 44


State 43

   14 fonction: type identificateur '(' liste_parms ')' $@1 bloc .

    $default  reduce using rule 14 (fonction)


State 44

   43 bloc: '{' $@2 . liste_declarations liste_instructions '}'

    $default  reduce using rule 3 (liste_declarations)

    liste_declarations  go to state 45


State 45

    2 liste_declarations: liste_declarations . declaration
   43 bloc: '{' $@2 liste_declarations . liste_instructions '}'

    C_INT           shift, and go to state 4
    C_VOID          shift, and go to state 5
    C_IF            shift, and go to state 46
    C_SWITCH        shift, and go to state 47
    C_BREAK         shift, and go to state 48
    C_FOR           shift, and go to state 49
    C_WHILE         shift, and go to state 50
    C_RETURN        shift, and go to state 51
    identificateur  shift, and go to state 52
    '{'             shift, and go to state 42

    $default  reduce using rule 24 (liste_instructions)

    declaration         go to state 8
    type                go to state 53
    liste_instructions  go to state 54
    instruction         go to state 55
    iteration           go to state 56
    selection           go to state 57
    saut                go to state 58
    affectation         go to state 59
    bloc                go to state 60
    appel               go to state 61
    variable            go to state 62


State 46

   33 selection: C_IF . '(' condition ')' instruction
   34          | C_IF . '(' condition ')' instruction C_ELSE instruction

    '('  shift, and go to state 63


State 47

   35 selection: C_SWITCH . '(' expression ')' '{' switch_body '}'

    '('  shift, and go to state 64


State 48

   38 saut: C_BREAK . ';'

    ';'  shift, and go to state 65


State 49

   31 iteration: C_FOR . '(' affectation ';' condition ';' affectation ')' instruction

    '('  shift, and go to state 66


State 50

   32 iteration: C_WHILE . '(' condition ')' instruction

    '('  shift, and go to state 67


State 51

   39 saut: C_RETURN . ';'
   40     | C_RETURN . expression ';'

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    ';'             shift, and go to state 71
    '('             shift, and go to state 72

    variable    go to state 73
    expression  go to state 74


State 52

   44 appel: identificateur . '(' liste_expressions ')' ';'
   45 variable: identificateur .
   46         | identificateur . var_tab

    '['  shift, and go to state 75
    '('  shift, and go to state 76

    $default  reduce using rule 45 (variable)

    var_tab  go to state 77


State 53

    6 declaration: type . liste_declarateurs ';'

    identificateur  shift, and go to state 30

    liste_declarateurs  go to state 15
    declarateur         go to state 16


State 54

   43 bloc: '{' $@2 liste_declarations liste_instructions . '}'

    '}'  shift, and go to state 78


State 55

   23 liste_instructions: instruction . liste_instructions

    C_IF            shift, and go to state 46
    C_SWITCH        shift, and go to state 47
    C_BREAK         shift, and go to state 48
    C_FOR           shift, and go to state 49
    C_WHILE         shift, and go to state 50
    C_RETURN        shift, and go to state 51
    identificateur  shift, and go to state 52
    '{'             shift, and go to state 42

    $default  reduce using rule 24 (liste_instructions)

    liste_instructions  go to state 79
    instruction         go to state 55
    iteration           go to state 56
    selection           go to state 57
    saut                go to state 58
    affectation         go to state 59
    bloc                go to state 60
    appel               go to state 61
    variable            go to state 62


State 56

   25 instruction: iteration .

    $default  reduce using rule 25 (instruction)


State 57

   26 instruction: selection .

    $default  reduce using rule 26 (instruction)


State 58

   27 instruction: saut .

    $default  reduce using rule 27 (instruction)


State 59

   28 instruction: affectation . ';'

    ';'  shift, and go to state 80


State 60

   29 instruction: bloc .

    $default  reduce using rule 29 (instruction)


State 61

   30 instruction: appel .

    $default  reduce using rule 30 (instruction)


State 62

   41 affectation: variable . '=' expression

    '='  shift, and go to state 81


State 63

   33 selection: C_IF '(' . condition ')' instruction
   34          | C_IF '(' . condition ')' instruction C_ELSE instruction

    C_MINUS         shift, and go to state 68
    C_NOT           shift, and go to state 82
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 83

    variable    go to state 73
    expression  go to state 84
    condition   go to state 85


State 64

   35 selection: C_SWITCH '(' . expression ')' '{' switch_body '}'

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 72

    variable    go to state 73
    expression  go to state 86


State 65

   38 saut: C_BREAK ';' .

    $default  reduce using rule 38 (saut)


State 66

   31 iteration: C_FOR '(' . affectation ';' condition ';' affectation ')' instruction

    identificateur  shift, and go to state 87

    affectation  go to state 88
    variable     go to state 62


State 67

   32 iteration: C_WHILE '(' . condition ')' instruction

    C_MINUS         shift, and go to state 68
    C_NOT           shift, and go to state 82
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 83

    variable    go to state 73
    expression  go to state 84
    condition   go to state 89


State 68

   58 expression: C_MINUS . expression

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 72

    variable    go to state 73
    expression  go to state 90


State 69

   45 variable: identificateur .
   46         | identificateur . var_tab
   61 expression: identificateur . '(' liste_expressions ')'

    '['  shift, and go to state 75
    '('  shift, and go to state 91

    $default  reduce using rule 45 (variable)

    var_tab  go to state 77


State 70

   59 expression: constante .

    $default  reduce using rule 59 (expression)


State 71

   39 saut: C_RETURN ';' .

    $default  reduce using rule 39 (saut)


State 72

   49 expression: '(' . expression ')'

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 72

    variable    go to state 73
    expression  go to state 92


State 73

   60 expression: variable .

    $default  reduce using rule 60 (expression)


State 74

   40 saut: C_RETURN expression . ';'
   50 expression: expression . C_PLUS expression
   51           | expression . C_MINUS expression
   52           | expression . C_MULT expression
   53           | expression . C_DIV expression
   54           | expression . LEFT_SHIFT expression
   55           | expression . RIGHT_SHIFT expression
   56           | expression . C_BIN_AND expression
   57           | expression . C_BIN_OR expression

    LEFT_SHIFT   shift, and go to state 93
    RIGHT_SHIFT  shift, and go to state 94
    C_PLUS       shift, and go to state 95
    C_MINUS      shift, and go to state 96
    C_MULT       shift, and go to state 97
    C_DIV        shift, and go to state 98
    C_BIN_AND    shift, and go to state 99
    C_BIN_OR     shift, and go to state 100
    ';'          shift, and go to state 101


State 75

   47 var_tab: '[' . expression ']' var_tab
   48        | '[' . expression ']'

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 72

    variable    go to state 73
    expression  go to state 102


State 76

   44 appel: identificateur '(' . liste_expressions ')' ';'

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 72

    $default  reduce using rule 63 (liste_expressions)

    variable           go to state 73
    expression         go to state 103
    liste_expressions  go to state 104
    l_expressions      go to state 105


State 77

   46 variable: identificateur var_tab .

    $default  reduce using rule 46 (variable)


State 78

   43 bloc: '{' $@2 liste_declarations liste_instructions '}' .

    $default  reduce using rule 43 (bloc)


State 79

   23 liste_instructions: instruction liste_instructions .

    $default  reduce using rule 23 (liste_instructions)


State 80

   28 instruction: affectation ';' .

    $default  reduce using rule 28 (instruction)


State 81

   41 affectation: variable '=' . expression

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 72

    variable    go to state 73
    expression  go to state 106


State 82

   66 condition: C_NOT . '(' condition ')'

    '('  shift, and go to state 107


State 83

   49 expression: '(' . expression ')'
   67 condition: '(' . condition ')'

    C_MINUS         shift, and go to state 68
    C_NOT           shift, and go to state 82
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 83

    variable    go to state 73
    expression  go to state 108
    condition   go to state 109


State 84

   50 expression: expression . C_PLUS expression
   51           | expression . C_MINUS expression
   52           | expression . C_MULT expression
   53           | expression . C_DIV expression
   54           | expression . LEFT_SHIFT expression
   55           | expression . RIGHT_SHIFT expression
   56           | expression . C_BIN_AND expression
   57           | expression . C_BIN_OR expression
   70 condition: expression . C_LT expression
   71          | expression . C_GT expression
   72          | expression . GTE expression
   73          | expression . LTE expression
   74          | expression . EQUALS expression
   75          | expression . NOT_EQUALS expression

    EQUALS       shift, and go to state 110
    GTE          shift, and go to state 111
    LTE          shift, and go to state 112
    NOT_EQUALS   shift, and go to state 113
    LEFT_SHIFT   shift, and go to state 93
    RIGHT_SHIFT  shift, and go to state 94
    C_PLUS       shift, and go to state 95
    C_MINUS      shift, and go to state 96
    C_MULT       shift, and go to state 97
    C_DIV        shift, and go to state 98
    C_BIN_AND    shift, and go to state 99
    C_BIN_OR     shift, and go to state 100
    C_LT         shift, and go to state 114
    C_GT         shift, and go to state 115


State 85

   33 selection: C_IF '(' condition . ')' instruction
   34          | C_IF '(' condition . ')' instruction C_ELSE instruction
   68 condition: condition . LOGICAL_AND condition
   69          | condition . LOGICAL_OR condition

    LOGICAL_AND  shift, and go to state 116
    LOGICAL_OR   shift, and go to state 117
    ')'          shift, and go to state 118


State 86

   35 selection: C_SWITCH '(' expression . ')' '{' switch_body '}'
   50 expression: expression . C_PLUS expression
   51           | expression . C_MINUS expression
   52           | expression . C_MULT expression
   53           | expression . C_DIV expression
   54           | expression . LEFT_SHIFT expression
   55           | expression . RIGHT_SHIFT expression
   56           | expression . C_BIN_AND expression
   57           | expression . C_BIN_OR expression

    LEFT_SHIFT   shift, and go to state 93
    RIGHT_SHIFT  shift, and go to state 94
    C_PLUS       shift, and go to state 95
    C_MINUS      shift, and go to state 96
    C_MULT       shift, and go to state 97
    C_DIV        shift, and go to state 98
    C_BIN_AND    shift, and go to state 99
    C_BIN_OR     shift, and go to state 100
    ')'          shift, and go to state 119


State 87

   45 variable: identificateur .
   46         | identificateur . var_tab

    '['  shift, and go to state 75

    $default  reduce using rule 45 (variable)

    var_tab  go to state 77


State 88

   31 iteration: C_FOR '(' affectation . ';' condition ';' affectation ')' instruction

    ';'  shift, and go to state 120


State 89

   32 iteration: C_WHILE '(' condition . ')' instruction
   68 condition: condition . LOGICAL_AND condition
   69          | condition . LOGICAL_OR condition

    LOGICAL_AND  shift, and go to state 116
    LOGICAL_OR   shift, and go to state 117
    ')'          shift, and go to state 121


State 90

   50 expression: expression . C_PLUS expression
   51           | expression . C_MINUS expression
   52           | expression . C_MULT expression
   53           | expression . C_DIV expression
   54           | expression . LEFT_SHIFT expression
   55           | expression . RIGHT_SHIFT expression
   56           | expression . C_BIN_AND expression
   57           | expression . C_BIN_OR expression
   58           | C_MINUS expression .

    $default  reduce using rule 58 (expression)


State 91

   61 expression: identificateur '(' . liste_expressions ')'

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 72

    $default  reduce using rule 63 (liste_expressions)

    variable           go to state 73
    expression         go to state 103
    liste_expressions  go to state 122
    l_expressions      go to state 105


State 92

   49 expression: '(' expression . ')'
   50           | expression . C_PLUS expression
   51           | expression . C_MINUS expression
   52           | expression . C_MULT expression
   53           | expression . C_DIV expression
   54           | expression . LEFT_SHIFT expression
   55           | expression . RIGHT_SHIFT expression
   56           | expression . C_BIN_AND expression
   57           | expression . C_BIN_OR expression

    LEFT_SHIFT   shift, and go to state 93
    RIGHT_SHIFT  shift, and go to state 94
    C_PLUS       shift, and go to state 95
    C_MINUS      shift, and go to state 96
    C_MULT       shift, and go to state 97
    C_DIV        shift, and go to state 98
    C_BIN_AND    shift, and go to state 99
    C_BIN_OR     shift, and go to state 100
    ')'          shift, and go to state 123


State 93

   54 expression: expression LEFT_SHIFT . expression

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 72

    variable    go to state 73
    expression  go to state 124


State 94

   55 expression: expression RIGHT_SHIFT . expression

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 72

    variable    go to state 73
    expression  go to state 125


State 95

   50 expression: expression C_PLUS . expression

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 72

    variable    go to state 73
    expression  go to state 126


State 96

   51 expression: expression C_MINUS . expression

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 72

    variable    go to state 73
    expression  go to state 127


State 97

   52 expression: expression C_MULT . expression

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 72

    variable    go to state 73
    expression  go to state 128


State 98

   53 expression: expression C_DIV . expression

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 72

    variable    go to state 73
    expression  go to state 129


State 99

   56 expression: expression C_BIN_AND . expression

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 72

    variable    go to state 73
    expression  go to state 130


State 100

   57 expression: expression C_BIN_OR . expression

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 72

    variable    go to state 73
    expression  go to state 131


State 101

   40 saut: C_RETURN expression ';' .

    $default  reduce using rule 40 (saut)


State 102

   47 var_tab: '[' expression . ']' var_tab
   48        | '[' expression . ']'
   50 expression: expression . C_PLUS expression
   51           | expression . C_MINUS expression
   52           | expression . C_MULT expression
   53           | expression . C_DIV expression
   54           | expression . LEFT_SHIFT expression
   55           | expression . RIGHT_SHIFT expression
   56           | expression . C_BIN_AND expression
   57           | expression . C_BIN_OR expression

    LEFT_SHIFT   shift, and go to state 93
    RIGHT_SHIFT  shift, and go to state 94
    C_PLUS       shift, and go to state 95
    C_MINUS      shift, and go to state 96
    C_MULT       shift, and go to state 97
    C_DIV        shift, and go to state 98
    C_BIN_AND    shift, and go to state 99
    C_BIN_OR     shift, and go to state 100
    ']'          shift, and go to state 132


State 103

   50 expression: expression . C_PLUS expression
   51           | expression . C_MINUS expression
   52           | expression . C_MULT expression
   53           | expression . C_DIV expression
   54           | expression . LEFT_SHIFT expression
   55           | expression . RIGHT_SHIFT expression
   56           | expression . C_BIN_AND expression
   57           | expression . C_BIN_OR expression
   64 l_expressions: expression .
   65              | expression . ',' l_expressions

    LEFT_SHIFT   shift, and go to state 93
    RIGHT_SHIFT  shift, and go to state 94
    C_PLUS       shift, and go to state 95
    C_MINUS      shift, and go to state 96
    C_MULT       shift, and go to state 97
    C_DIV        shift, and go to state 98
    C_BIN_AND    shift, and go to state 99
    C_BIN_OR     shift, and go to state 100
    ','          shift, and go to state 133

    $default  reduce using rule 64 (l_expressions)


State 104

   44 appel: identificateur '(' liste_expressions . ')' ';'

    ')'  shift, and go to state 134


State 105

   62 liste_expressions: l_expressions .

    $default  reduce using rule 62 (liste_expressions)


State 106

   41 affectation: variable '=' expression .
   50 expression: expression . C_PLUS expression
   51           | expression . C_MINUS expression
   52           | expression . C_MULT expression
   53           | expression . C_DIV expression
   54           | expression . LEFT_SHIFT expression
   55           | expression . RIGHT_SHIFT expression
   56           | expression . C_BIN_AND expression
   57           | expression . C_BIN_OR expression

    LEFT_SHIFT   shift, and go to state 93
    RIGHT_SHIFT  shift, and go to state 94
    C_PLUS       shift, and go to state 95
    C_MINUS      shift, and go to state 96
    C_MULT       shift, and go to state 97
    C_DIV        shift, and go to state 98
    C_BIN_AND    shift, and go to state 99
    C_BIN_OR     shift, and go to state 100

    $default  reduce using rule 41 (affectation)


State 107

   66 condition: C_NOT '(' . condition ')'

    C_MINUS         shift, and go to state 68
    C_NOT           shift, and go to state 82
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 83

    variable    go to state 73
    expression  go to state 84
    condition   go to state 135


State 108

   49 expression: '(' expression . ')'
   50           | expression . C_PLUS expression
   51           | expression . C_MINUS expression
   52           | expression . C_MULT expression
   53           | expression . C_DIV expression
   54           | expression . LEFT_SHIFT expression
   55           | expression . RIGHT_SHIFT expression
   56           | expression . C_BIN_AND expression
   57           | expression . C_BIN_OR expression
   70 condition: expression . C_LT expression
   71          | expression . C_GT expression
   72          | expression . GTE expression
   73          | expression . LTE expression
   74          | expression . EQUALS expression
   75          | expression . NOT_EQUALS expression

    EQUALS       shift, and go to state 110
    GTE          shift, and go to state 111
    LTE          shift, and go to state 112
    NOT_EQUALS   shift, and go to state 113
    LEFT_SHIFT   shift, and go to state 93
    RIGHT_SHIFT  shift, and go to state 94
    C_PLUS       shift, and go to state 95
    C_MINUS      shift, and go to state 96
    C_MULT       shift, and go to state 97
    C_DIV        shift, and go to state 98
    C_BIN_AND    shift, and go to state 99
    C_BIN_OR     shift, and go to state 100
    C_LT         shift, and go to state 114
    C_GT         shift, and go to state 115
    ')'          shift, and go to state 123


State 109

   67 condition: '(' condition . ')'
   68          | condition . LOGICAL_AND condition
   69          | condition . LOGICAL_OR condition

    LOGICAL_AND  shift, and go to state 116
    LOGICAL_OR   shift, and go to state 117
    ')'          shift, and go to state 136


State 110

   74 condition: expression EQUALS . expression

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 72

    variable    go to state 73
    expression  go to state 137


State 111

   72 condition: expression GTE . expression

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 72

    variable    go to state 73
    expression  go to state 138


State 112

   73 condition: expression LTE . expression

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 72

    variable    go to state 73
    expression  go to state 139


State 113

   75 condition: expression NOT_EQUALS . expression

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 72

    variable    go to state 73
    expression  go to state 140


State 114

   70 condition: expression C_LT . expression

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 72

    variable    go to state 73
    expression  go to state 141


State 115

   71 condition: expression C_GT . expression

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 72

    variable    go to state 73
    expression  go to state 142


State 116

   68 condition: condition LOGICAL_AND . condition

    C_MINUS         shift, and go to state 68
    C_NOT           shift, and go to state 82
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 83

    variable    go to state 73
    expression  go to state 84
    condition   go to state 143


State 117

   69 condition: condition LOGICAL_OR . condition

    C_MINUS         shift, and go to state 68
    C_NOT           shift, and go to state 82
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 83

    variable    go to state 73
    expression  go to state 84
    condition   go to state 144


State 118

   33 selection: C_IF '(' condition ')' . instruction
   34          | C_IF '(' condition ')' . instruction C_ELSE instruction

    C_IF            shift, and go to state 46
    C_SWITCH        shift, and go to state 47
    C_BREAK         shift, and go to state 48
    C_FOR           shift, and go to state 49
    C_WHILE         shift, and go to state 50
    C_RETURN        shift, and go to state 51
    identificateur  shift, and go to state 52
    '{'             shift, and go to state 42

    instruction  go to state 145
    iteration    go to state 56
    selection    go to state 57
    saut         go to state 58
    affectation  go to state 59
    bloc         go to state 60
    appel        go to state 61
    variable     go to state 62


State 119

   35 selection: C_SWITCH '(' expression ')' . '{' switch_body '}'

    '{'  shift, and go to state 146


State 120

   31 iteration: C_FOR '(' affectation ';' . condition ';' affectation ')' instruction

    C_MINUS         shift, and go to state 68
    C_NOT           shift, and go to state 82
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 83

    variable    go to state 73
    expression  go to state 84
    condition   go to state 147


State 121

   32 iteration: C_WHILE '(' condition ')' . instruction

    C_IF            shift, and go to state 46
    C_SWITCH        shift, and go to state 47
    C_BREAK         shift, and go to state 48
    C_FOR           shift, and go to state 49
    C_WHILE         shift, and go to state 50
    C_RETURN        shift, and go to state 51
    identificateur  shift, and go to state 52
    '{'             shift, and go to state 42

    instruction  go to state 148
    iteration    go to state 56
    selection    go to state 57
    saut         go to state 58
    affectation  go to state 59
    bloc         go to state 60
    appel        go to state 61
    variable     go to state 62


State 122

   61 expression: identificateur '(' liste_expressions . ')'

    ')'  shift, and go to state 149


State 123

   49 expression: '(' expression ')' .

    $default  reduce using rule 49 (expression)


State 124

   50 expression: expression . C_PLUS expression
   51           | expression . C_MINUS expression
   52           | expression . C_MULT expression
   53           | expression . C_DIV expression
   54           | expression . LEFT_SHIFT expression
   54           | expression LEFT_SHIFT expression .
   55           | expression . RIGHT_SHIFT expression
   56           | expression . C_BIN_AND expression
   57           | expression . C_BIN_OR expression

    C_BIN_AND  shift, and go to state 99
    C_BIN_OR   shift, and go to state 100

    $default  reduce using rule 54 (expression)


State 125

   50 expression: expression . C_PLUS expression
   51           | expression . C_MINUS expression
   52           | expression . C_MULT expression
   53           | expression . C_DIV expression
   54           | expression . LEFT_SHIFT expression
   55           | expression . RIGHT_SHIFT expression
   55           | expression RIGHT_SHIFT expression .
   56           | expression . C_BIN_AND expression
   57           | expression . C_BIN_OR expression

    C_BIN_AND  shift, and go to state 99
    C_BIN_OR   shift, and go to state 100

    $default  reduce using rule 55 (expression)


State 126

   50 expression: expression . C_PLUS expression
   50           | expression C_PLUS expression .
   51           | expression . C_MINUS expression
   52           | expression . C_MULT expression
   53           | expression . C_DIV expression
   54           | expression . LEFT_SHIFT expression
   55           | expression . RIGHT_SHIFT expression
   56           | expression . C_BIN_AND expression
   57           | expression . C_BIN_OR expression

    LEFT_SHIFT   shift, and go to state 93
    RIGHT_SHIFT  shift, and go to state 94
    C_MULT       shift, and go to state 97
    C_DIV        shift, and go to state 98
    C_BIN_AND    shift, and go to state 99
    C_BIN_OR     shift, and go to state 100

    $default  reduce using rule 50 (expression)


State 127

   50 expression: expression . C_PLUS expression
   51           | expression . C_MINUS expression
   51           | expression C_MINUS expression .
   52           | expression . C_MULT expression
   53           | expression . C_DIV expression
   54           | expression . LEFT_SHIFT expression
   55           | expression . RIGHT_SHIFT expression
   56           | expression . C_BIN_AND expression
   57           | expression . C_BIN_OR expression

    LEFT_SHIFT   shift, and go to state 93
    RIGHT_SHIFT  shift, and go to state 94
    C_MULT       shift, and go to state 97
    C_DIV        shift, and go to state 98
    C_BIN_AND    shift, and go to state 99
    C_BIN_OR     shift, and go to state 100

    $default  reduce using rule 51 (expression)


State 128

   50 expression: expression . C_PLUS expression
   51           | expression . C_MINUS expression
   52           | expression . C_MULT expression
   52           | expression C_MULT expression .
   53           | expression . C_DIV expression
   54           | expression . LEFT_SHIFT expression
   55           | expression . RIGHT_SHIFT expression
   56           | expression . C_BIN_AND expression
   57           | expression . C_BIN_OR expression

    LEFT_SHIFT   shift, and go to state 93
    RIGHT_SHIFT  shift, and go to state 94
    C_BIN_AND    shift, and go to state 99
    C_BIN_OR     shift, and go to state 100

    $default  reduce using rule 52 (expression)


State 129

   50 expression: expression . C_PLUS expression
   51           | expression . C_MINUS expression
   52           | expression . C_MULT expression
   53           | expression . C_DIV expression
   53           | expression C_DIV expression .
   54           | expression . LEFT_SHIFT expression
   55           | expression . RIGHT_SHIFT expression
   56           | expression . C_BIN_AND expression
   57           | expression . C_BIN_OR expression

    LEFT_SHIFT   shift, and go to state 93
    RIGHT_SHIFT  shift, and go to state 94
    C_BIN_AND    shift, and go to state 99
    C_BIN_OR     shift, and go to state 100

    $default  reduce using rule 53 (expression)


State 130

   50 expression: expression . C_PLUS expression
   51           | expression . C_MINUS expression
   52           | expression . C_MULT expression
   53           | expression . C_DIV expression
   54           | expression . LEFT_SHIFT expression
   55           | expression . RIGHT_SHIFT expression
   56           | expression . C_BIN_AND expression
   56           | expression C_BIN_AND expression .
   57           | expression . C_BIN_OR expression

    $default  reduce using rule 56 (expression)


State 131

   50 expression: expression . C_PLUS expression
   51           | expression . C_MINUS expression
   52           | expression . C_MULT expression
   53           | expression . C_DIV expression
   54           | expression . LEFT_SHIFT expression
   55           | expression . RIGHT_SHIFT expression
   56           | expression . C_BIN_AND expression
   57           | expression . C_BIN_OR expression
   57           | expression C_BIN_OR expression .

    $default  reduce using rule 57 (expression)


State 132

   47 var_tab: '[' expression ']' . var_tab
   48        | '[' expression ']' .

    '['  shift, and go to state 75

    $default  reduce using rule 48 (var_tab)

    var_tab  go to state 150


State 133

   65 l_expressions: expression ',' . l_expressions

    C_MINUS         shift, and go to state 68
    identificateur  shift, and go to state 69
    constante       shift, and go to state 70
    '('             shift, and go to state 72

    variable       go to state 73
    expression     go to state 103
    l_expressions  go to state 151


State 134

   44 appel: identificateur '(' liste_expressions ')' . ';'

    ';'  shift, and go to state 152


State 135

   66 condition: C_NOT '(' condition . ')'
   68          | condition . LOGICAL_AND condition
   69          | condition . LOGICAL_OR condition

    LOGICAL_AND  shift, and go to state 116
    LOGICAL_OR   shift, and go to state 117
    ')'          shift, and go to state 153


State 136

   67 condition: '(' condition ')' .

    $default  reduce using rule 67 (condition)


State 137

   50 expression: expression . C_PLUS expression
   51           | expression . C_MINUS expression
   52           | expression . C_MULT expression
   53           | expression . C_DIV expression
   54           | expression . LEFT_SHIFT expression
   55           | expression . RIGHT_SHIFT expression
   56           | expression . C_BIN_AND expression
   57           | expression . C_BIN_OR expression
   74 condition: expression EQUALS expression .

    LEFT_SHIFT   shift, and go to state 93
    RIGHT_SHIFT  shift, and go to state 94
    C_PLUS       shift, and go to state 95
    C_MINUS      shift, and go to state 96
    C_MULT       shift, and go to state 97
    C_DIV        shift, and go to state 98
    C_BIN_AND    shift, and go to state 99
    C_BIN_OR     shift, and go to state 100

    $default  reduce using rule 74 (condition)


State 138

   50 expression: expression . C_PLUS expression
   51           | expression . C_MINUS expression
   52           | expression . C_MULT expression
   53           | expression . C_DIV expression
   54           | expression . LEFT_SHIFT expression
   55           | expression . RIGHT_SHIFT expression
   56           | expression . C_BIN_AND expression
   57           | expression . C_BIN_OR expression
   72 condition: expression GTE expression .

    LEFT_SHIFT   shift, and go to state 93
    RIGHT_SHIFT  shift, and go to state 94
    C_PLUS       shift, and go to state 95
    C_MINUS      shift, and go to state 96
    C_MULT       shift, and go to state 97
    C_DIV        shift, and go to state 98
    C_BIN_AND    shift, and go to state 99
    C_BIN_OR     shift, and go to state 100

    $default  reduce using rule 72 (condition)


State 139

   50 expression: expression . C_PLUS expression
   51           | expression . C_MINUS expression
   52           | expression . C_MULT expression
   53           | expression . C_DIV expression
   54           | expression . LEFT_SHIFT expression
   55           | expression . RIGHT_SHIFT expression
   56           | expression . C_BIN_AND expression
   57           | expression . C_BIN_OR expression
   73 condition: expression LTE expression .

    LEFT_SHIFT   shift, and go to state 93
    RIGHT_SHIFT  shift, and go to state 94
    C_PLUS       shift, and go to state 95
    C_MINUS      shift, and go to state 96
    C_MULT       shift, and go to state 97
    C_DIV        shift, and go to state 98
    C_BIN_AND    shift, and go to state 99
    C_BIN_OR     shift, and go to state 100

    $default  reduce using rule 73 (condition)


State 140

   50 expression: expression . C_PLUS expression
   51           | expression . C_MINUS expression
   52           | expression . C_MULT expression
   53           | expression . C_DIV expression
   54           | expression . LEFT_SHIFT expression
   55           | expression . RIGHT_SHIFT expression
   56           | expression . C_BIN_AND expression
   57           | expression . C_BIN_OR expression
   75 condition: expression NOT_EQUALS expression .

    LEFT_SHIFT   shift, and go to state 93
    RIGHT_SHIFT  shift, and go to state 94
    C_PLUS       shift, and go to state 95
    C_MINUS      shift, and go to state 96
    C_MULT       shift, and go to state 97
    C_DIV        shift, and go to state 98
    C_BIN_AND    shift, and go to state 99
    C_BIN_OR     shift, and go to state 100

    $default  reduce using rule 75 (condition)


State 141

   50 expression: expression . C_PLUS expression
   51           | expression . C_MINUS expression
   52           | expression . C_MULT expression
   53           | expression . C_DIV expression
   54           | expression . LEFT_SHIFT expression
   55           | expression . RIGHT_SHIFT expression
   56           | expression . C_BIN_AND expression
   57           | expression . C_BIN_OR expression
   70 condition: expression C_LT expression .

    LEFT_SHIFT   shift, and go to state 93
    RIGHT_SHIFT  shift, and go to state 94
    C_PLUS       shift, and go to state 95
    C_MINUS      shift, and go to state 96
    C_MULT       shift, and go to state 97
    C_DIV        shift, and go to state 98
    C_BIN_AND    shift, and go to state 99
    C_BIN_OR     shift, and go to state 100

    $default  reduce using rule 70 (condition)


State 142

   50 expression: expression . C_PLUS expression
   51           | expression . C_MINUS expression
   52           | expression . C_MULT expression
   53           | expression . C_DIV expression
   54           | expression . LEFT_SHIFT expression
   55           | expression . RIGHT_SHIFT expression
   56           | expression . C_BIN_AND expression
   57           | expression . C_BIN_OR expression
   71 condition: expression C_GT expression .

    LEFT_SHIFT   shift, and go to state 93
    RIGHT_SHIFT  shift, and go to state 94
    C_PLUS       shift, and go to state 95
    C_MINUS      shift, and go to state 96
    C_MULT       shift, and go to state 97
    C_DIV        shift, and go to state 98
    C_BIN_AND    shift, and go to state 99
    C_BIN_OR     shift, and go to state 100

    $default  reduce using rule 71 (condition)


State 143

   68 condition: condition . LOGICAL_AND condition
   68          | condition LOGICAL_AND condition .
   69          | condition . LOGICAL_OR condition

    $default  reduce using rule 68 (condition)


State 144

   68 condition: condition . LOGICAL_AND condition
   69          | condition . LOGICAL_OR condition
   69          | condition LOGICAL_OR condition .

    $default  reduce using rule 69 (condition)


State 145

   33 selection: C_IF '(' condition ')' instruction .
   34          | C_IF '(' condition ')' instruction . C_ELSE instruction

    C_ELSE  shift, and go to state 154

    $default  reduce using rule 33 (selection)


State 146

   35 selection: C_SWITCH '(' expression ')' '{' . switch_body '}'

    C_CASE     shift, and go to state 155
    C_DEFAULT  shift, and go to state 156

    switch_body  go to state 157


State 147

   31 iteration: C_FOR '(' affectation ';' condition . ';' affectation ')' instruction
   68 condition: condition . LOGICAL_AND condition
   69          | condition . LOGICAL_OR condition

    LOGICAL_AND  shift, and go to state 116
    LOGICAL_OR   shift, and go to state 117
    ';'          shift, and go to state 158


State 148

   32 iteration: C_WHILE '(' condition ')' instruction .

    $default  reduce using rule 32 (iteration)


State 149

   61 expression: identificateur '(' liste_expressions ')' .

    $default  reduce using rule 61 (expression)


State 150

   47 var_tab: '[' expression ']' var_tab .

    $default  reduce using rule 47 (var_tab)


State 151

   65 l_expressions: expression ',' l_expressions .

    $default  reduce using rule 65 (l_expressions)


State 152

   44 appel: identificateur '(' liste_expressions ')' ';' .

    $default  reduce using rule 44 (appel)


State 153

   66 condition: C_NOT '(' condition ')' .

    $default  reduce using rule 66 (condition)


State 154

   34 selection: C_IF '(' condition ')' instruction C_ELSE . instruction

    C_IF            shift, and go to state 46
    C_SWITCH        shift, and go to state 47
    C_BREAK         shift, and go to state 48
    C_FOR           shift, and go to state 49
    C_WHILE         shift, and go to state 50
    C_RETURN        shift, and go to state 51
    identificateur  shift, and go to state 52
    '{'             shift, and go to state 42

    instruction  go to state 159
    iteration    go to state 56
    selection    go to state 57
    saut         go to state 58
    affectation  go to state 59
    bloc         go to state 60
    appel        go to state 61
    variable     go to state 62


State 155

   36 switch_body: C_CASE . constante ':' liste_instructions switch_body

    constante  shift, and go to state 160


State 156

   37 switch_body: C_DEFAULT . ':' liste_instructions

    ':'  shift, and go to state 161


State 157

   35 selection: C_SWITCH '(' expression ')' '{' switch_body . '}'

    '}'  shift, and go to state 162


State 158

   31 iteration: C_FOR '(' affectation ';' condition ';' . affectation ')' instruction

    identificateur  shift, and go to state 87

    affectation  go to state 163
    variable     go to state 62


State 159

   34 selection: C_IF '(' condition ')' instruction C_ELSE instruction .

    $default  reduce using rule 34 (selection)


State 160

   36 switch_body: C_CASE constante . ':' liste_instructions switch_body

    ':'  shift, and go to state 164


State 161

   37 switch_body: C_DEFAULT ':' . liste_instructions

    C_IF            shift, and go to state 46
    C_SWITCH        shift, and go to state 47
    C_BREAK         shift, and go to state 48
    C_FOR           shift, and go to state 49
    C_WHILE         shift, and go to state 50
    C_RETURN        shift, and go to state 51
    identificateur  shift, and go to state 52
    '{'             shift, and go to state 42

    $default  reduce using rule 24 (liste_instructions)

    liste_instructions  go to state 165
    instruction         go to state 55
    iteration           go to state 56
    selection           go to state 57
    saut                go to state 58
    affectation         go to state 59
    bloc                go to state 60
    appel               go to state 61
    variable            go to state 62


State 162

   35 selection: C_SWITCH '(' expression ')' '{' switch_body '}' .

    $default  reduce using rule 35 (selection)


State 163

   31 iteration: C_FOR '(' affectation ';' condition ';' affectation . ')' instruction

    ')'  shift, and go to state 166


State 164

   36 switch_body: C_CASE constante ':' . liste_instructions switch_body

    C_IF            shift, and go to state 46
    C_SWITCH        shift, and go to state 47
    C_BREAK         shift, and go to state 48
    C_FOR           shift, and go to state 49
    C_WHILE         shift, and go to state 50
    C_RETURN        shift, and go to state 51
    identificateur  shift, and go to state 52
    '{'             shift, and go to state 42

    $default  reduce using rule 24 (liste_instructions)

    liste_instructions  go to state 167
    instruction         go to state 55
    iteration           go to state 56
    selection           go to state 57
    saut                go to state 58
    affectation         go to state 59
    bloc                go to state 60
    appel               go to state 61
    variable            go to state 62


State 165

   37 switch_body: C_DEFAULT ':' liste_instructions .

    $default  reduce using rule 37 (switch_body)


State 166

   31 iteration: C_FOR '(' affectation ';' condition ';' affectation ')' . instruction

    C_IF            shift, and go to state 46
    C_SWITCH        shift, and go to state 47
    C_BREAK         shift, and go to state 48
    C_FOR           shift, and go to state 49
    C_WHILE         shift, and go to state 50
    C_RETURN        shift, and go to state 51
    identificateur  shift, and go to state 52
    '{'             shift, and go to state 42

    instruction  go to state 168
    iteration    go to state 56
    selection    go to state 57
    saut         go to state 58
    affectation  go to state 59
    bloc         go to state 60
    appel        go to state 61
    variable     go to state 62


State 167

   36 switch_body: C_CASE constante ':' liste_instructions . switch_body

    C_CASE     shift, and go to state 155
    C_DEFAULT  shift, and go to state 156

    switch_body  go to state 169


State 168

   31 iteration: C_FOR '(' affectation ';' condition ';' affectation ')' instruction .

    $default  reduce using rule 31 (iteration)


State 169

   36 switch_body: C_CASE constante ':' liste_instructions switch_body .

    $default  reduce using rule 36 (switch_body)
